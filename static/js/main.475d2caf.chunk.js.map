{"version":3,"sources":["Cell.js","Row.js","Widget.js","Ticker.js","Grid.js","App.js","reducers/rootReducer.js","index.js","store.js"],"names":["Cell","props","onClick","handleClick","className","val","Row","grid","Array","len","keys","this","map","num","key","offset","e","handleCellClick","vals","React","Component","Widget","Ticker","notImplemented","name","Error","tick","load","getURL","clear","subrender","setTimer","timerID","setInterval","state","interval","setState","_","timerSet","unsetTimer","clearInterval","toggleTimer","changeInterval","bpm","parseInt","target","value","convertBpmInterval","changeLoadInput","loadInput","renderTempo","toString","onChange","disabled","type","min","max","placeholder","a","Grid","widgets","Object","values","forEach","widget","pos","dir","alert","loc","indexOf","query","slice","split","length","loadNewWay","loadOldWay","widgetsToAdd","match","newState","synths","idx","pos0","pos1","_addWidgetInternal","updateVals","DEFAULT_INTERVAL","parsed","_generateSynth","Tone","connect","reverb","feedback","toDestination","newWidgets","JSON","parse","stringify","ctr","newSynths","clickedWidgets","filter","w","flat","handleCollisions","updateWidget","sounded","playSounds","highlightCells","gridsize","initVals","fill","getArrow","synth","didHitWall","makeSound","push","cellsToFlash","i","j","cells","document","getElementsByClassName","id","innerText","setTimeout","last","triggerAttackRelease","scale","keysAndVals","join","groupedWidgetIds","groupBy","x","xs","access","reduce","rv","App","combineReducers","ReactDOM","render","StrictMode","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","getElementById"],"mappings":"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","file":"static/js/main.475d2caf.chunk.js","sourcesContent":["export function Cell(props) {\n  return <td onClick={props.handleClick} className='cell'>{props.val}</td>;\n}","import React from 'react';\nimport { Cell } from './Cell';\nexport class Row extends React.Component {\n  constructor(props) {\n    super(props);\n    this.grid = [...Array(this.props.len).keys()];\n  }\n\n  render() {\n    return (\n      <tr>\n        {\n          this.grid.map(num => {\n            let key = this.props.offset * this.props.len + num;\n            return <Cell handleClick={e => this.props.handleCellClick(e, num, this.props.offset)} key={key} val={this.props.vals[num]} />\n\n          })\n        }\n      </tr>\n    );\n  }\n}\n","export function Widget(props) {\n    return (\n        <div>\n            {/* idx: {props.idx}\n            pos: {props.pos.toString()}\n            dir: {props.dir.toString()} */}\n        </div>\n    );\n}","import React from 'react';\nexport class Ticker extends React.Component {\n\n    notImplemented = (name) => () => {\n        throw new Error(name + \" not implemented\");\n    }\n\n    tick = this.notImplemented(\"tick\");\n    load = this.notImplemented(\"load\");\n    getURL = this.notImplemented(\"getURL\");\n    clear = this.notImplemented(\"clear\");\n    subrender = this.notImplemented(\"subrender\");\n\n    setTimer = () => {\n        this.timerID = setInterval(\n            () => this.tick(),\n            this.state.interval\n        );\n        this.setState((state, _) =>  ({...state, timerSet: true}));\n      }\n\n    unsetTimer = () => {\n        clearInterval(this.timerID);\n        this.setState((state, _) =>  ({...state, timerSet: false}));\n    }\n\n    toggleTimer = () => {\n        this.state.timerSet ? this.unsetTimer() : this.setTimer();\n    }\n\n    componentWillUnmount() {\n        this.unsetTimer();\n    }\n\n    changeInterval = (e) => {\n        let bpm = parseInt(e.target.value, 10);\n        this.setState({interval:  Ticker.convertBpmInterval(bpm)})\n    }\n\n    static convertBpmInterval(a) {\n        return 30000/a;\n    }\n\n    changeLoadInput = (e) => {\n        this.setState({loadInput: e.target.value})\n    }\n\n    renderTempo = () => parseInt(Ticker.convertBpmInterval(this.state.interval), 10).toString();\n\n    render() {\n        return (\n            <div>\n                {this.subrender()}\n                <div className='controls'>\n                <button onClick={this.toggleTimer}>\n                    {this.state.timerSet ? \"Pause\" : \"Play\"}\n                </button>\n                <span className=\"spacer\"/>\n                <button onClick={this.clear}>Clear</button>\n                <span className=\"spacer\"/>\n                Tempo:&nbsp;\n                <input className=\"bpm\" onChange={this.changeInterval} value={this.renderTempo()} disabled={this.state.timerSet} type=\"number\" min=\"50\" max=\"300\" placeholder={this.renderTempo()}/>\n                <div className=\"urlcontrols\">\n                    <input placeholder=\"earslap URL\" onChange={this.changeLoadInput} value={this.state.loadInput} className=\"loadurl\"></input>&nbsp;<button onClick={this.load}>Load</button>\n                    <span className=\"spacer\"/>\n                    <button onClick={this.getURL}>Get URL</button>\n                </div>\n                </div>\n            </div >\n        );\n    }\n}\n","import React from 'react';\nimport { Row } from './Row';\nimport { Widget } from './Widget';\nimport { Ticker } from './Ticker';\nimport * as Tone from 'tone';\n\nexport class Grid extends Ticker {\n  constructor(props) {\n    super(props);\n\n    this.grid = [...Array(this.props.gridsize).keys()];\n    this.reverb = new Tone.Reverb(0.3).toDestination();\n    this.feedback = new Tone.FeedbackDelay(0.3, 0.2).toDestination();\n    this.DEFAULT_INTERVAL = 200;\n\n    this.state = {\n      widgets: {},\n      synths: {},\n      vals: this.initVals(),\n      interval: this.DEFAULT_INTERVAL,\n      ctr: 0,\n      loadInput: \"\",\n    }\n\n    // TODO this causes tick() to run all the time\n    // document.addEventListener('keydown', event => {\n    //   if (event.code === 'Space') {\n    //     this.toggleTimer();\n    //   }\n    // })\n  }\n\n  getURL = () => {\n    this.unsetTimer();\n    const bpm = parseInt(Ticker.convertBpmInterval(this.state.interval), 10);\n\n    let widgets = \"\";\n    Object.values(this.state.widgets).forEach(widget => {\n      widgets += (widget.pos[0].toString() + widget.pos[1].toString() + widget.dir.toString());\n    })\n\n    alert(\"http://earslap.com/projectslab/otomata/?q=10_0_\" + bpm + \"_\" + widgets);\n  }\n\n  load = () => {\n    this.unsetTimer();\n    const loc = this.state.loadInput.indexOf(\"?q=\");\n    if (loc !== -1) {\n      const query = this.state.loadInput.slice(loc + 3).split('_');\n      if (query.length === 4) {\n        return this.loadNewWay();\n      } else if (query.length === 1) {\n        return this.loadOldWay();\n      }\n    }\n    alert(\"could not parse URL\");\n    return;\n\n  }\n\n  loadOldWay = () => {\n    // http://www.earslap.com/projectslab/otomata?q=0g636n4q6v1d3v832t\n    this.setState((state, _) => {\n      const lookup = 'qwertyuiopasdfghjklzxcvbnm0123456789';\n      const loc = this.state.loadInput.indexOf(\"?q=\");\n      const widgetsToAdd = state.loadInput.slice(loc + 3).match(/.{2}/g) || []\n\n      let newState = {...state, widgets: {}, synths: {}};\n\n      for (let idx = 0; idx < widgetsToAdd.length; idx++) {\n        const pos0 = parseInt( widgetsToAdd[idx][0], 10);\n        const value = lookup.indexOf(widgetsToAdd[idx][1]);\n        const dir =  value % 4;\n        const pos1 = parseInt((value - dir)/4, 10);\n        newState = this._addWidgetInternal(newState, pos0, pos1, dir);\n      }\n\n      return {...newState, timerSet: false, vals: this.updateVals(newState.widgets), interval: this.DEFAULT_INTERVAL};\n    })\n  }\n\n  loadNewWay = () => {\n    // http://earslap.com/projectslab/otomata/?q=10_0_150_862771880062173080\n    this.setState((state, _) => {\n      const loc = state.loadInput.indexOf(\"?q=\");\n      const parsed = state.loadInput.slice(loc).split('_')\n      const interval = Ticker.convertBpmInterval(parsed[2]);\n      const widgetsToAdd = parsed[3].match(/.{3}/g) || [];\n\n      let newState = {...state, widgets: {}, synths: {}};\n\n      for (let idx = 0; idx < widgetsToAdd.length; idx++) {\n        const pos0 = parseInt( widgetsToAdd[idx][0], 10);\n        const pos1 = parseInt( widgetsToAdd[idx][1], 10);\n        const dir =  parseInt( widgetsToAdd[idx][2], 10);\n        newState = this._addWidgetInternal(newState, pos0, pos1, dir);\n      }\n\n      return {...newState, timerSet: false, vals: this.updateVals(newState.widgets), interval};\n    })\n  }\n\n  _generateSynth = () => new Tone.Synth().connect(this.reverb).connect(this.feedback).toDestination();\n\n  _addWidgetInternal = (state, pos0, pos1, dir=0) => {\n    let newWidgets = JSON.parse(JSON.stringify(state.widgets));\n    newWidgets[state.ctr] = {idx: state.ctr, pos: [pos0, pos1], dir: dir};\n    let newSynths = {...state.synths};\n    newSynths[state.ctr] = this._generateSynth();\n    return { ...state, synths: newSynths, widgets: newWidgets, vals: this.updateVals(newWidgets), ctr: state.ctr + 1 };\n  }\n\n  clear = () => {\n     this.setState((state, _) => ({...state, widgets: {}, synths: {}, vals: this.updateVals({})}));\n  }\n\n  handleCellClick = (e, pos0, pos1) => {\n    this.setState((state, _) => {\n      let clickedWidgets = Object.values(state.widgets).filter(w => w.pos[0] === pos0 && w.pos[1] === pos1).flat();\n      if (clickedWidgets.length === 0) {\n        // Put widget there\n        return this._addWidgetInternal(state, pos0, pos1);\n\n      } else if (clickedWidgets.length === 1) {\n        let idx = clickedWidgets[0].idx;\n        let newWidgets = JSON.parse(JSON.stringify(state.widgets));\n        let dir = newWidgets[idx].dir;\n        if (dir < 3) {\n          // rotate widget\n          newWidgets[idx].dir = (dir + 1) % 4;\n        } else {\n          // delete widget\n          delete newWidgets[idx];\n          delete state.synths[idx];\n        }\n        return { ...state, widgets: newWidgets, vals: this.updateVals(newWidgets) };\n      }\n    });\n  }\n\n  initVals() {\n    return new Array(this.props.gridsize).fill('')\n      .map(_ => new Array(this.props.gridsize).fill(''));\n  }\n\n  static getArrow(pos) {\n    if (pos === 0) {\n      return '↑';\n    } else if (pos === 1) {\n      return '→';\n    } else if (pos === 2) {\n      return '↓';\n    } else {\n      return '←';\n    }\n  }\n\n  updateVals(widgets) {\n    let vals = this.initVals();\n    Object.values(widgets).forEach(w => vals[w.pos[1]][w.pos[0]] += Grid.getArrow(w.dir));\n    return vals;\n  }\n\n  tick = () => {\n    this.setState((state, _) => {\n      let newWidgets = JSON.parse(JSON.stringify(state.widgets));\n      newWidgets = this.handleCollisions(newWidgets);\n      Object.keys(newWidgets).forEach(idx => {\n        newWidgets[idx] = this.updateWidget(newWidgets[idx]);\n      });\n\n      return { ...state, widgets: newWidgets, vals: this.updateVals(newWidgets)};\n    });\n    let sounded = this.playSounds();\n    this.highlightCells(sounded);\n  }\n\n  playSounds() {\n    let sounded = {'cols': [], 'rows': []};\n    Object.keys(this.state.widgets).forEach(idx => {\n      const widget = this.state.widgets[idx];\n      let synth = this.state.synths[idx];\n      if (this.didHitWall(widget.pos, widget.dir)) {\n        this.makeSound(widget.pos, widget.dir, synth);\n        if (widget.dir % 2) {\n          sounded['rows'].push(widget.pos[1]);\n        } else {\n          sounded['cols'].push(widget.pos[0]);\n        }\n      }\n    });\n    return sounded;\n  }\n\n  highlightCells(sounded) {\n    let cellsToFlash = [];\n    for (let i = 0; i < this.props.gridsize; i++) {\n      for (let j=0; j < this.props.gridsize; j++) {\n        if (sounded['rows'].indexOf(i) !== -1  || sounded['cols'].indexOf(j) !== -1) {\n          cellsToFlash.push(i*this.props.gridsize + j);\n        }\n      }\n    }\n    let cells = document.getElementsByClassName(\"cell\");\n    cellsToFlash.forEach(id => {if (!cells[id].innerText) {cells[id].className = 'cell flashing'}});\n    setTimeout(() => cellsToFlash.forEach(id => {if (!cells[id].innerText) {cells[id].className = 'cell'}}), 75);\n  }\n\n  didHitWall(pos, dir) {\n    const last = this.props.gridsize - 1;\n    return (dir === 0 && pos[1] === 0)\n      || (dir === 1 && pos[0] === last)\n      || (dir === 2 && pos[1] === last)\n      || (dir === 3 && pos[0] === 0);\n  }\n\n  makeSound(pos, dir, synth) {\n    let val = 0;\n    const last = this.props.gridsize - 1;\n    // TODO demystify this code\n    if ((dir % 2 === 1) && (pos[0] === 0 || pos[0] === last)) {\n      val = last - pos[1];\n    } else {\n      val = pos[0];\n    }\n    synth.triggerAttackRelease(this.props.scale[val % this.props.scale.length], \"8n\", Tone.now(), 0.3);\n  }\n\n  updateWidget(widget) {\n    // if this will hit the wall, reverse\n    if (this.didHitWall(widget.pos, widget.dir)) {\n      widget.dir = (widget.dir + 2) % 4;\n    }\n\n    if (widget.dir === 2) {\n      widget.pos = [widget.pos[0], (widget.pos[1] + 1 + this.props.gridsize) % this.props.gridsize]\n    } else if (widget.dir === 0) {\n      widget.pos = [widget.pos[0], (widget.pos[1] - 1 + this.props.gridsize) % this.props.gridsize]\n    } else if (widget.dir === 1) {\n      widget.pos = [(widget.pos[0] + 1 + this.props.gridsize) % this.props.gridsize, widget.pos[1]];\n    } else {\n      widget.pos = [(widget.pos[0] - 1 + this.props.gridsize) % this.props.gridsize, widget.pos[1]];\n    }\n\n    return widget;\n  }\n\n  handleCollisions(widgets) {\n    const keysAndVals = Object.values(widgets)\n      .map(w => [w.idx, w.pos.join(',')]);\n\n    const groupedWidgetIds = Object.values(this.groupBy(keysAndVals, 1, 0));\n    groupedWidgetIds.filter(x => x.length > 2).flat().forEach(id => {\n      // 3 or more, just reverse direction\n      widgets[id].dir = (widgets[id].dir + 2) % 4;\n    });\n    groupedWidgetIds.filter(x => x.length === 2).flat().forEach(id => {\n      // 2, rotate\n      widgets[id].dir = (widgets[id].dir + 1) % 4;\n    });\n    return widgets;\n  }\n\n  groupBy(xs, key, access) {\n    return xs.reduce(function (rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x[access]);\n      return rv;\n    }, {});\n  };\n\n  subrender = () => {\n    return (\n      <div>\n        <table>\n          <tbody>\n            {\n              this.grid.map(num => {\n                return <Row handleCellClick={this.handleCellClick}\n                  offset={num} key={num} vals={this.state.vals[num]} len={this.props.gridsize} />\n              })\n            }\n          </tbody>\n        </table>\n        <br />\n        {\n          Object.values(this.state.widgets).map(w => {\n            return <Widget\n              idx={w.idx}\n              key={w.idx}\n              dir={w.dir}\n              pos={w.pos}\n            />\n          })\n        }\n      </div>\n    );\n  }\n}\n","import './App.css';\nimport { Grid } from './Grid';\nimport { connect } from 'react-redux';\nimport { Component } from 'react';\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Grid\n          gridsize={9}\n          scale={[\"E3\", \"B3\", \"C4\", \"D4\", \"E4\", \"F#4\", \"G4\", \"B4\", \"D5\"]}\n        />\n      </div >\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nexport default combineReducers({\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nexport default function configureStore(initialState = {}) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n}"],"sourceRoot":""}